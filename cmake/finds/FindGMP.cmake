if (DEFINED CMAKE_GMP_FOUND)
  return ()
endif ()

find_path(CMAKE_GMP_INCLUDE_PATH NAMES "gmp.h")
if (CMAKE_GMP_INCLUDE_PATH)
  message(STATUS "Status of GMP library - include path is found: \"${CMAKE_GMP_INCLUDE_PATH}\"")
else()
  message(STATUS "Status of GMP library - include path is not found")
endif()

find_library(CMAKE_GMP_SHARED_LIBRARY_PATH NAMES "libgmp.so")
if (CMAKE_GMP_SHARED_LIBRARY_PATH)
  message(STATUS "Status of GMP library - shared library path is found: \"${CMAKE_GMP_SHARED_LIBRARY_PATH}\"")
else()
  message(STATUS "Status of GMP library - shared library path is not found")
endif()

find_library(CMAKE_GMP_STATIC_LIBRARY_PATH NAMES "libgmp.a")
if (CMAKE_GMP_STATIC_LIBRARY_PATH)
  message(STATUS "Status of GMP library - static library path is found: \"${CMAKE_GMP_STATIC_LIBRARY_PATH}\"")
else()
  message(STATUS "Status of GMP library - static library path is not found")
endif()

mark_as_advanced(CMAKE_GMP_INCLUDE_PATH CMAKE_GMP_SHARED_LIBRARY_PATH CMAKE_GMP_STATIC_LIBRARY_PATH)

if (CMAKE_GMP_INCLUDE_PATH AND (CMAKE_GMP_SHARED_LIBRARY_PATH OR CMAKE_GMP_STATIC_LIBRARY_PATH))
  set (CMAKE_GMP_FOUND true CACHE STRING "GMP found")
else()
  set (CMAKE_GMP_FOUND false CACHE STRING "GMP found")

  if (GMP_FIND_REQUIRED)
    message (FATAL_ERROR "GMP is required")
  endif ()
endif ()
