LZWS(3)
=======


NAME
----
lzws_compressor_get_initial_state - Create compressor state.


SYNOPSIS
--------
*#include <lzws/compressor/state.h>*

----
lzws_result_t lzws_compressor_get_initial_state(
  lzws_compressor_state_t** state_ptr,
  uint_fast8_t max_code_bit_length, bool block_mode, bool msb, bool unaligned_bit_groups, bool quiet);
----


OPTIONS
-------
*`lzws_compressor_state_t** state_ptr`*::
  Pointer to new compressor state.

Other options are related to algorithm customization.

*`uint_fast8_t max_code_bit_length`*::
  Set max code bit length.
  Min value *LZWS_LOWEST_MAX_CODE_BIT_LENGTH*, max - *LZWS_BIGGEST_MAX_CODE_BIT_LENGTH*.

*`bool block_mode`*::
  Enable block mode.

*`bool msb`*::
  Enable most significant bit mode.

*`bool unaligned_bit_groups`*::
  Enable unaligned bit groups.

*`bool quiet`*::
  Disable error messages.


RETURN VALUE
------------
Returns *0* if state was created, otherwise not *0*.
See header file for more details about possible results.


DESCRIPTION
-----------
This function creates initial compressor state.
You should use *lzws_compressor_free_state* to free it.


EXAMPLE
-------
You need to create compressor state compatible with UNIX compress utility.

----
lzws_compressor_state_t* state_ptr;

lzws_result_t result = lzws_compressor_get_initial_state(
  &state_ptr,
  LZWS_BIGGEST_MAX_CODE_BIT_LENGTH, true, false, false, false);

if (result != 0) {
  return 1;
}
----


SEE ALSO
--------
*lzws_compressor_write_magic_header*(3)
*lzws_compressor_free_state*(3)
*lzws_compress*(3)
*lzws_flush_compressor*(3)
